buildscript {
	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins", version: "2.0.10"
		classpath 'de.undercouch:gradle-download-task:3.1.1'
	}

	repositories {
		mavenLocal()

		mavenCentral()

		maven {
			url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
		}
	}
}

apply plugin: "com.liferay.plugin"
apply plugin: 'de.undercouch.download'

//configurations {
//	portalDependency
//}

dependencies {
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.5.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.util.taglib", version: "2.5.0"
	compileOnly group: "javax.portlet", name: "portlet-api", version: "2.0"
	compileOnly group: "javax.servlet", name: "servlet-api", version: "2.5"
	compileOnly group: "javax.websocket", name: "javax.websocket-api", version: "1.1"
	compileOnly group: "jstl", name: "jstl", version: "1.2"
	compileOnly group: "org.osgi", name: "org.osgi.compendium", version: "5.0.0"
	compileOnly group: "org.osgi", name: "org.osgi.core", version: "5.0.0"

	//portalDependency group: "com.liferay", name: "com.liferay.websocket.whiteboard", version: "1.0.0"

	testIntegrationCompile group: "com.liferay.arquillian", name: "com.liferay.arquillian.arquillian-container-liferay", version: "1.0.5"
	testIntegrationCompile group: "org.jboss.arquillian.junit", name: "arquillian-junit-container", version: "1.1.11.Final"
	testIntegrationCompile group: "junit", name: "junit", version: "4.12"
	testIntegrationCompile group: "org.jboss.arquillian.graphene", name: "graphene-webdriver", version: "2.1.0.Final"
}

import de.undercouch.gradle.tasks.download.Download

def bundle = 'liferay/bundle.zip'

liferay {
	liferayHome = 'liferay/liferay-ce-portal-7.0-ga3'
}

task downloadLiferay(type: Download) {
	src 'http://downloads.sourceforge.net/project/lportal/Liferay%20Portal/7.0.2%20GA3/liferay-ce-portal-tomcat-7.0-ga3-20160804222206210.zip?r=&ts=1476801340&use_mirror=kent'
	dest  file(bundle)
	overwrite false
}

task unzipLiferay(type: Copy) {
	from(zipTree(bundle))
	into 'liferay'
	enabled !(file(liferay.liferayHome).exists())
}

task copyPortalExt(type: Copy) {
	from file('src/testIntegration/resources/portal-ext.properties')
	into "${liferay.liferayHome}"
}

task copyPortalDependencies(type: Copy) {
	from file('portalDependency/com.liferay.websocket.whiteboard-1.0.0.jar')
	into "${liferay.liferayHome}/osgi/modules"
}

task copyCollaboration(type:Copy) {
	from 'build/lpkg/Liferay CE Collaboration.lpkg'
	into 'liferay/liferay-ce-portal-7.0-ga3/osgi/marketplace/'
}

task zipCollaboration(type:Zip) {
	from 'build/lpkg/collaboration'
	include '*'
	archiveName 'Liferay CE Collaboration.lpkg'
	destinationDir(file('build/lpkg/'))

	finalizedBy copyCollaboration
}

task overrideCollaboration {
	dependsOn copyPortalExt

	doLast {
		copy {
			from(zipTree('liferay/liferay-ce-portal-7.0-ga3/osgi/marketplace/Liferay CE Collaboration.lpkg'))
			into 'build/lpkg/collaboration'
		}
		copy {
			from('src/testIntegration/resources/lpkg/collaboration-liferay-marketplace.properties')
			into 'build/lpkg/collaboration'
			rename { String name ->
				name.replace("collaboration-liferay-marketplace.properties", "liferay-marketplace.properties")
			}
		}

		def tree = fileTree('build/lpkg/collaboration')
		tree.include '*wiki*'
		tree.include '*blog*'
		tree.include '*announcements*'
		tree.include '*bookmarks*'
		tree.each { it.delete() }
	}

	finalizedBy zipCollaboration
}

task copyFoundation(type:Copy) {
	from 'build/lpkg/Liferay CE Foundation.lpkg'
	into 'liferay/liferay-ce-portal-7.0-ga3/osgi/marketplace/'
}

task zipFoundation(type:Zip) {
	from 'build/lpkg/foundation'
	include '*'
	archiveName 'Liferay CE Foundation.lpkg'
	destinationDir(file('build/lpkg/'))

	finalizedBy copyFoundation
}

task overrideFoundation {
	dependsOn copyPortalExt

	doLast {
		copy {
			from(zipTree('liferay/liferay-ce-portal-7.0-ga3/osgi/marketplace/Liferay CE Foundation.lpkg'))
			into 'build/lpkg/foundation'
		}
		copy {
			from('src/testIntegration/resources/lpkg/foundation-liferay-marketplace.properties')
			into 'build/lpkg/foundation'
			rename { String name ->
				name.replace("foundation-liferay-marketplace.properties", "liferay-marketplace.properties")
			}
		}

		def tree = fileTree('build/lpkg/foundation')
		tree.include '*product-app-theme*'
		tree.include '*user-dashboard-theme*'
		tree.include '*user-profile-theme*'
		tree.each { it.delete() }
	}

	finalizedBy zipFoundation
}

unzipLiferay.dependsOn downloadLiferay
copyPortalDependencies.dependsOn unzipLiferay
copyPortalExt.dependsOn copyPortalDependencies
overrideFoundation.dependsOn copyPortalExt
jar {
	if (project.hasProperty('dir')) {
		destinationDir = file(dir);
	}
}

startTestableTomcat {
	checkTimeout = 10 * 60 * 1000
}

task checkLiferay() {
	doLast {
		def url = "http://localhost:8080"

		println("Trying to reach " + url)

		while (true) {
			try {
				print(".")

				url.toURL().text

				println("Portal startup finished")

				break
			}
			catch (Exception e) {
				Thread.sleep(1000)
			}
		}
	}
}

repositories {
	mavenLocal()

	maven {
		url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
	}
}